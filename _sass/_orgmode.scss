// Org Mode


$header1: 500 1.7rem  $headerfontname;
$header2: 400 1.4rem  $headerfontname;
$header3: 400 1.2rem  $headerfontname;
$header4: 400 1.15rem $headerfontname;
$header5: 400 1.05em  $headerfontname;

header.post-header {
    margin-top: 1em;
    margin-bottom: 2.5em;
    h1.post-title {
        color: $yellow;
        font: $header1;
        text-align: center;
        letter-spacing: 0.05rem;
    }
}

// Level 1 headings
.outline-2 > h2 {
    color: $yellow;
    font: $header2;
    margin: 2rem 0;
    letter-spacing: 0.05rem;

    b,i,code,pre {
        color: inherit;
    }
}

.outline-3 > h3 {
    // color: $green;
    color: $green;
    font: $header3;
    letter-spacing: 0.05rem;
    margin: 2rem 0;

    b,i,code,pre {
        color: inherit;
    }
}

.outline-4 > h4 {
    color: $base01;
    font: $header4;
    margin: 2rem 0;
    letter-spacing: 0.05rem;

    b,i,code,pre {
        color: inherit;
    }
}

.outline-5 > h5 {
    color: $base00;
    font: $header5;
    margin: 2rem 0;
    letter-spacing: 0.05rem;
}

li > .outline-text-5 {
    a {
        font-weight: bold;
    }
}

a ~ .outline-text-5 {
    display: none;
    font-weight: bold;
}


// Generated TOC
div#text-table-of-contents {
    padding-top: 2rem;
    padding-bottom: 2rem;
    font-size: 0.9em;
}

/** Post Style **/
article {
    line-height: 1.6em;
}

article > section > div p {
    text-align: justify;
    margin: 1rem 0;
}


// Align images
article figure {
    text-align: center;

    img {
        max-width: 100%;
        height: auto;
    }
}

// Source code container || #+BEGIN_SRC
.org-src-container {
    // background-color: #073642;
    // overflow-x: auto;
    white-space: nowrap;
    border-left: 0.25rem dashed $base2;
    font-size: 0.90rem;
    padding: 0.75rem 1rem;
    margin: 1rem 0;
}


// Footnotes/Asides || [fn:1] and [fn:Inline]
aside {
    p {
        font: normal 0.9em $fontname;
    }
    margin: auto;
    position: absolute;
    margin-left: $main-width;
    padding-left: 3%;
    width: 8em;
    font-size: 0.8em;
    text-align: left;
    display: block;
}

@media all and (min-width: 1024px) and (max-width: 1260px) {
    aside {
        width: 7em;
        padding-left: 1em;
    }
}

@media all and (max-width: 1023px) {
    // on too small of a screen the asides are useless anyway;
    aside {
        position: static;
        display: inline;
    }
}

.footnote-definition {
    font: normal 400 0.7rem $fontname;
    position: absolute;
    margin-left: $main-width;
    padding-left: 2rem;
    width: 10rem;
}

// Quotes #+BEGIN_QUOTE
.post-content blockquote {
    font: italic 400 1em $fontname;
    padding-left: 1em;

    * {
        line-height: 1.5rem;
    }
}

// Examples
pre.example {
    overflow-x: auto;
    background-color: $base2;
    border-left: 3px solid $base01;
    padding: 2ex;
}

// Figures generated by org-mode, e.g 'ditaa'
figure > p {
    margin-top: 1em;
    margin-bottom: 1em;

    object {
        margin-left: auto;
        margin-right: auto;
        display: block;
    }
}

// Tables
article > section > div table {
    width: 100%;
    border-spacing: 0;

    td, th {
        border: 1px solid transparent; /* No more visible border */
        height: 30px;
        transition: all 0.3s;  /* Simple transition for hover effect */
        padding: 0.5em;
    }

    th {
        background: $base2;  /* Darken header a bit */
        font-weight: bold;
    }

    td {
        background: $base1;
        text-align: center;
    }

    tr {
        &:nth-child(odd) td { background: $base3; }
        &:nth-child(even) td { background: $base2; }
    }
}

// Centered text || #+BEGIN_CENTER
.org-center {
    text-align: center;
}

// Plain list checkboxes || [ ] & [X]
li.off, li.on {
    code:first-of-type {
        font-size: 0 !important;
        visibility: hidden;
        &::after {
            font-family: inherit;
            font-weight: 600;
            font-size: 20px !important;
            visibility: visible;
        }
    }
}
// Checked/Unchecked Box
li.off {code:first-of-type::after {content: "\2610";}}
li.on {code:first-of-type::after {content: "\2611";}}
